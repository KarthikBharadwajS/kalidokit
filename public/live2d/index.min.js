import{modelsList}from"./utils/constants.js";const{Application:Application,live2d:{Live2DModel:Live2DModel}}=PIXI,{Face:Face,Vector:{lerp:lerp},Utils:{clamp:clamp}}=Kalidokit,modelUrl="./models/mao_pro_en/mao_pro_t02.model3.json";let currentModel,facemesh;const videoElement=document.querySelector(".input_video"),guideCanvas=document.querySelector("canvas.guides");(async function(){const e=new PIXI.Application({view:document.getElementById("live2d"),autoStart:!0,backgroundAlpha:0,backgroundColor:16777215,resizeTo:window});currentModel=await Live2DModel.from(modelUrl,{autoInteract:!1}),currentModel.scale.set(.4),currentModel.interactive=!0,currentModel.anchor.set(.5,.5),currentModel.position.set(.5*window.innerWidth,.8*window.innerHeight),document.querySelector("#live2d").addEventListener("wheel",e=>{e.preventDefault(),currentModel.scale.set(clamp(currentModel.scale.x+-.001*event.deltaY,-.5,10))}),e.stage.addChild(currentModel),facemesh=new FaceMesh({locateFile:e=>`https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${e}`}),facemesh.setOptions({maxNumFaces:1,refineLandmarks:!0,minDetectionConfidence:.5,minTrackingConfidence:.5}),facemesh.onResults(onResults),startCamera()})();const onResults=e=>{drawResults(e.multiFaceLandmarks[0]),animateLive2DModel(e.multiFaceLandmarks[0])},drawResults=e=>{if(!guideCanvas||!videoElement||!e)return;guideCanvas.width=videoElement.videoWidth,guideCanvas.height=videoElement.videoHeight;let a=guideCanvas.getContext("2d");a.save(),a.clearRect(0,0,guideCanvas.width,guideCanvas.height),drawConnectors(a,e,FACEMESH_TESSELATION,{color:"#C0C0C070",lineWidth:1}),e&&478===e.length&&drawLandmarks(a,[e[468],e[473]],{color:"#ffe603",lineWidth:2})},animateLive2DModel=e=>{if(!currentModel||!e)return;let a;e&&(a=Face.solve(e,{runtime:"mediapipe",video:videoElement}),rigFace(a,.5))},rigFace=(e,a=.7)=>{if(!currentModel||!e)return;const r=currentModel.internalModel.coreModel;currentModel.internalModel.motionManager.update=((...t)=>{currentModel.internalModel.eyeBlink=void 0,r.setParameterValueById("ParamEyeBallX",lerp(e.pupil.x,r.getParameterValueById("ParamEyeBallX"),a)),r.setParameterValueById("ParamEyeBallY",lerp(e.pupil.y,r.getParameterValueById("ParamEyeBallY"),a)),r.setParameterValueById("ParamAngleX",lerp(e.head.degrees.y,r.getParameterValueById("ParamAngleX"),a)),r.setParameterValueById("ParamAngleY",lerp(e.head.degrees.x,r.getParameterValueById("ParamAngleY"),a)),r.setParameterValueById("ParamAngleZ",lerp(e.head.degrees.z,r.getParameterValueById("ParamAngleZ"),a));const l=.3;r.setParameterValueById("ParamBodyAngleX",lerp(e.head.degrees.y*l,r.getParameterValueById("ParamBodyAngleX"),a)),r.setParameterValueById("ParamBodyAngleY",lerp(e.head.degrees.x*l,r.getParameterValueById("ParamBodyAngleY"),a)),r.setParameterValueById("ParamBodyAngleZ",lerp(e.head.degrees.z*l,r.getParameterValueById("ParamBodyAngleZ"),a));let d=Kalidokit.Face.stabilizeBlink({l:lerp(e.eye.l,r.getParameterValueById("ParamEyeLOpen"),.7),r:lerp(e.eye.r,r.getParameterValueById("ParamEyeROpen"),.7)},e.head.y);r.setParameterValueById("ParamEyeLOpen",d.l),r.setParameterValueById("ParamEyeROpen",d.r),r.setParameterValueById("ParamMouthOpenY",lerp(e.mouth.y,r.getParameterValueById("ParamMouthOpenY"),.3)),r.setParameterValueById("ParamMouthForm",.3+lerp(e.mouth.x,r.getParameterValueById("ParamMouthForm"),.3))})},startCamera=()=>{const e=new Camera(videoElement,{onFrame:async()=>{await facemesh.send({image:videoElement})},width:640,height:480});e.start()};